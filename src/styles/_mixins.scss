@import '_variables.scss';

@mixin media-query($query, $direction: 'up') {
  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $width: nth($breakpoint, 2);

    @if $query == $name and $width {
      @if $direction == 'up' {
        @media screen and (min-width: #{$width}) {
          @content;
        }
      } @else if $direction == 'down' {
        @media screen and (max-width: #{$width}) {
          @content;
        }
      }
    }
  }
}

@mixin fade-in($delay: 0s, $duration: 1.2s) {
  opacity: 0;
  visibility: hidden;
  animation: fadeIn $duration ease-in $delay forwards;

  @keyframes fadeIn {
    to {
      opacity: 1;
      visibility: visible;
    }
  }
}

@mixin noise-bg() {
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    right: -50%;
    bottom: -50%;
    width: 200%;
    height: 200vh;
    background: transparent url('/noise.png') repeat 0 0;
    background-repeat: repeat;
    animation: noise 0.2s infinite;
    opacity: 0.9;
    visibility: visible;
    z-index: -1;

    @media (prefers-reduced-motion) {
      display: none;
    }
  }

  @keyframes noise {
    0% {
      transform: translate(0, 0);
    }
    10% {
      transform: translate(-5%, -5%);
    }
    20% {
      transform: translate(-10%, 5%);
    }
    30% {
      transform: translate(5%, -10%);
    }
    40% {
      transform: translate(-5%, 15%);
    }
    50% {
      transform: translate(-10%, 5%);
    }
    60% {
      transform: translate(15%, 0);
    }
    70% {
      transform: translate(0, 10%);
    }
    80% {
      transform: translate(-15%, 0);
    }
    90% {
      transform: translate(10%, 5%);
    }
    100% {
      transform: translate(5%, 0);
    }
  }
}
